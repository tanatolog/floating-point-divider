// WARNING: Do NOT edit the input and output ports in this file in a text
// editor if you plan to continue editing the block that represents it in
// the Block Editor! File corruption is VERY likely to occur.

// Copyright (C) 1991-2010 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II Version 9.1 (Build Build 350 03/24/2010)
// Created on Mon Mar 14 12:39:45 2022

//  Module Declaration
module UA
(
	// {{ALTERA_ARGS_BEGIN}} DO NOT REMOVE THIS LINE!
	clk, x, clkout, y, Z
	// {{ALTERA_ARGS_END}} DO NOT REMOVE THIS LINE!
);
// Port Declaration

	// {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	input clk;
	input [9:1] x;
	output clkout;
	output [13:0] y;
	output Z;
	// {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!


integer pc = 0; 
reg [13:0] y; 
wire clkout; 
reg Z=0; 
assign clkout=!clk;
always @(posedge clk) 
begin
case (pc)
	0:begin 
		y=14'b00001010000001;
		pc = 1;
	end
	1:begin 
		y=14'b10010000000000;
		pc = 2;
	end
	2:begin 
		y=14'b00000000000001;  
		pc = 3; 
	end
	3:begin 
		if (x[1] == 1) begin
			y=14'b00000000000100;
			pc = 10;
		end
		else begin
			if ((x[1] == 0) && (x[2] == 1)) begin
				y=14'b00000110000000;
				pc = 9;
			end
			else begin
				if ((x[1] == 0) && (x[2] == 0)) begin
					y=14'b11000000000000;
					pc = 4;
				end
			end
		end
	end
	4:begin 
		if (x[3] == 1) begin
			y=14'b00000000000010;
			pc = 10;
		end
		else begin 
			if ((x[3] == 0) && (x[4] == 1)) begin
				y=14'b00000110000000;
				pc = 9;
			end
			else begin
				if ((x[3] == 0) && (x[4] == 0)) begin
					y=14'b00110000000000;
					pc = 5;
				end
			end
		end
	end
	5:begin 
		if (x[5] == 1) begin
			y=14'b00010000000000;
			pc = 6;
		end
		else begin
			if (x[5] == 0) begin
				y=14'b00000000100000;
				pc = 7;
			end
		end
	end
	6:begin 
		y=14'b00000000100000; 
		pc = 7; 
	end
	7:begin 
		if (x[6] == 0) begin
			y=14'b00110000000000;
			pc = 5;
		end
		else begin 
			if ((x[6] == 1) && (x[7] == 0)) begin
				y=14'b00000001000000;
				pc = 8;
			end
			else begin 
				if ((x[6] == 1) && (x[7] == 1) && (x[8] == 1)) begin
					y=14'b00000110000000;
					pc = 9;
				end
				else begin 
					if ((x[6] == 1) && (x[7] == 1) && (x[8] == 0) && (x[9] == 1)) begin
						y=14'b00000000001000;
						pc = 9;
					end
					else begin 
						if ((x[6] == 1) && (x[7] == 1) && (x[8] == 0) && (x[9] == 0)) begin
							y=14'b00000000000000;
							pc = 9;
						end
					end
				end
			end
		end
	end
	8:begin 
		if (x[3] == 1) begin
			y=14'b00000000000010;
			pc = 10;
		end
		else begin 
			if ((x[3] == 0) && (x[9] == 1)) begin
				y=14'b00000000001000;
				pc = 9;
			end
			else begin 
				if ((x[3] == 0) && (x[9] == 0)) begin
					y=14'b00000000000000;
					pc = 9;
				end	
			end
		end
	end
	9:begin 
		y=14'b00000000010000; 
		pc = 10;
	end
	10:begin 
		y=14'b00000000000000; 
		pc = 11;
		Z = 1;
	end
	default y=14'b00000000000000;   
endcase;
end

endmodule
